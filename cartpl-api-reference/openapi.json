{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI For Motor Insurance",
    "description": "API's that you need to use to issue insurance policies to your clients",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://staging.yasmina.ai/api/v1/car"
    },
    {
      "url": "https://sandbox.yasmina.ai/api/v1/car"
    },
    {
      "url": "https://portal.yasmina.ai/api/v1/car"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/policies": {
      "get": {
        "description": "Listing requested policies",
        "tags": ["Policies"],
        "summary": "List policies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Policy"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "description": "For issuing a new policy",
        "summary": "Issue policy",
        "tags": ["Policies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vin": {
                    "type": "string"
                  },
                  "car_sequence_number": {
                    "type": "string"
                  },
                  "current_car_owner": {
                    "description": "The nationality ID of the current owner",
                    "type": "string"
                  },
                  "new_owner_id": {
                    "description": "The Nationality ID of the new owner",
                    "type": "string"
                  },
                  "extra_fields": {
                    "type": "object",
                    "description": "Optional free-form object with additional fields. Total JSON-encoded size must not exceed 255 characters.",
                    "additionalProperties": true,
                    "example": {
                      "some_key": "some value",
                      "another_key": 123
                    }
                  }
                },
                "required": ["vin", "car_sequence_number", "current_car_owner", "new_owner_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "description": "Problem in the values that you submitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "42201",
                    "message": "The vin must be 17 characters. (and 3 more errors)",
                    "details": {
                      "vin": [
                        "The vin must be 17 characters."
                      ],
                      "car_sequence_number": [
                        "The car sequence number must be 9 digits."
                      ],
                      "new_owner_id": [
                        "The new owner id must be 10 digits."
                      ],
                      "current_car_owner": [
                        "The current owner id field cannot be empty."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policies/{carPolicy}/cancellation": {
      "post": {
        "description": "Cancel a policy",
        "summary": "Cancel policy",
        "tags": ["Policies"],
        "parameters": [
          {
            "required": true,
            "name": "carPolicy",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellation_document": {
                    "type": "string",
                    "description": "Supporting document of why policy was deleted. Could be resignation document.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Cancellation success"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": "40010",
                  "message": "Policy is already canceled"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "40010"
                    },
                    "message": {
                      "type": "string",
                      "example": "Policy is already canceled"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/policies/{policyId}/claims": {
      "post": {
        "tags": ["Claims"],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "summary": "Issue claim",
        "description": "Issue a claim to your policy",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "requested_amount": {
                      "type": "string"
                    },
                    "claim_status": {
                      "type": "integer"
                    },
                    "policy_id": {
                      "type": "integer"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "supporting_document": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "requested_amount": {
                    "type": "number",
                    "description": "Value in SAR",
                    "example": 1000
                  },
                  "description": {
                    "description": "All details about what happened",
                    "example": "",
                    "type": "string"
                  },
                  "supporting_document": {
                    "format": "binary",
                    "type": "string",
                    "description": "Could be used for uploading the invoice",
                    "example": ""
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "NotFound": {
        "description": "Record not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "40401"
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "40101"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthenticated"
                }
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "Policy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "meta_data": {
            "type": "object"
          },
          "start_date": {
            "type": "string"
          },
          "provider_policy_id": {
            "type": "integer"
          },
          "provider_policy": {
            "type": "string"
          },
          "order_status": {
            "type": "integer"
          },
          "approval_status": {
            "type": "integer"
          },
          "end_date": {
            "type": "string"
          },
          "is_claimed": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "canceled_at": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "type": "string"
          },
          "cancellation_document": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}