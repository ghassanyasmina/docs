{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI For Motor Insurance",
    "description": "API's that you need to use to issue insurance policies to your clients",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://staging.yasmina.ai/api/v1/car-comp"
    },
    {
      "url": "https://sandbox.yasmina.ai/api/v1/car-comp"
    },
    {
      "url": "https://portal.yasmina.ai/api/v1/car-comp"
    }
  ],
  "security": [
    {
      "Oauth2": []
    }
  ],
  "paths": {
    "/quote-requests/{id}": {
      "get": {
        "tags": ["Quotes"],
        "summary": "Show quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Single quote details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/QuoteResponse" }
              }
            }
          },
          "404": {
            "description": "Quote not found"
          }
        }
      },
      "delete": {
        "summary": "Delete quote",
        "tags": ["Quotes"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Quote deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Quote deleted successfully." }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quote not found"
          }
        }
      }
    },
    "/quote-requests": {
      "get": {
        "tags": ["Quotes"],
        "summary": "List quotes",
        "responses": {
          "200": {
            "description": "Paginated list of quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": { "type": "integer" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/QuoteResponse" }
                    },
                    "first_page_url": { "type": "string" },
                    "from": { "type": "integer", "nullable": true },
                    "last_page": { "type": "integer" },
                    "last_page_url": { "type": "string" },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": { "type": "string" },
                          "label": { "type": "string" },
                          "active": { "type": "boolean" }
                        }
                      }
                    },
                    "next_page_url": { "type": "string" },
                    "path": { "type": "string" },
                    "per_page": { "type": "integer" },
                    "prev_page_url": { "type": "string" },
                    "to": { "type": "integer", "nullable": true },
                    "total": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "For getting prices with benefits. \nThe Quote IDs can be used later to issue a policy",
        "tags": ["Quotes"],
        "summary": "Request quotes",
        "responses": {
          "200": {
            "description": "Insurance quote details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "owner_id": {
                    "type": "string",
                    "pattern": "^(1|2|7)\\d{9}$",
                    "description": "Owner ID must be 10 digits starting with 1, 2, or 7"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address must be valid and belongs to the customer"
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^05\\d{8}$",
                    "description": "Phone number must start with 05 and be 10 digits"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date",
                    "description": "Birthdate in YYYY-MM-DD format"
                  },
                  "car_sequence_number": {
                    "type": "string",
                    "pattern": "^\\d{8,9}$",
                    "description": "Car sequence number must be 8 or 9 digits"
                  },
                  "is_ownership_transfer": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates if the ownership is being transferred"
                  },
                  "current_car_owner_id": {
                    "type": "string",
                    "pattern": "^(1|2|7)\\d{9}$",
                    "description": "Required if is_ownership_transfer is true; 10 digits starting with 1,2,7"
                  },
                  "car_estimated_cost": {
                    "type": "number",
                    "description": "Estimated cost of the car"
                  },
                  "car_model_year": {
                    "type": "integer",
                    "minimum": 1950,
                    "maximum": 2026,
                    "description": "Car model year between 1950 and next year"
                  }
                },
                "required": ["owner_id", "phone", "birthdate", "car_sequence_number", "car_estimated_cost"]
              }
            }
          }
        }
      }
    },
    "/policies/{carPolicy}": {
      "get": {
        "description": "Show a specific policy",
        "tags": ["Policies"],
        "summary": "Show policy",
        "parameters": [
          {
            "required": true,
            "name": "carPolicy",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          }
        }
      }
    },
    "/policies": {
      "get": {
        "description": "Listing requested policies",
        "tags": ["Policies"],
        "summary": "List policies",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Policy"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "description": "For issuing a new policy",
        "summary": "Issue policy",
        "tags": ["Policies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quote_request_id": {
                    "type": "integer",
                    "description": "ID of the car quote request",
                    "example": 123
                  },
                  "quote_reference_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifier for the quote reference ID (coming from POST /quote-requests)",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                  },
                  "quote_price_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifier for the quote price ID that exists inside a quote item (coming from POST /quote-requests)",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                  },
                  "benefits": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid",
                      "description": "UUID of a benefit (coming from POST /quote-request)"
                    },
                    "description": "List of benefit UUIDs",
                    "example": [
                      "6f45768d-edcd-4bb0-ab8a-712d549deee9",
                      "2f276e18-0c6e-49ca-b6e6-64700a1bef90"
                    ]
                  },
                  "extra_fields": {
                    "type": "object",
                    "description": "Optional free-form object with additional fields. Total JSON-encoded size must not exceed 255 characters.",
                    "additionalProperties": true,
                    "example": {
                      "some_key": "some value",
                      "another_key": 123
                    }
                  }
                },
                "required": [
                  "quote_request_id",
                  "quote_reference_id",
                  "quote_price_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "description": "Problem in the values that you submitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "42201",
                    "message": "The vin must be 17 characters. (and 3 more errors)",
                    "details": {
                      "vin": [
                        "The vin must be 17 characters."
                      ],
                      "car_sequence_number": [
                        "The car sequence number must be 9 digits."
                      ],
                      "new_owner_id": [
                        "The new owner id must be 10 digits."
                      ],
                      "current_car_owner": [
                        "The current owner id field cannot be empty."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policies/{carPolicy}/cancellation": {
      "post": {
        "description": "Cancel a policy",
        "summary": "Cancel policy",
        "tags": ["Policies"],
        "parameters": [
          {
            "required": true,
            "name": "carPolicy",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellation_document": {
                    "type": "string",
                    "description": "Supporting document of why policy was deleted. Could be resignation document.",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Cancellation success"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "code": "40010",
                  "message": "Policy is already canceled"
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "40010"
                    },
                    "message": {
                      "type": "string",
                      "example": "Policy is already canceled"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/policies/{policyId}/claims": {
      "post": {
        "tags": ["Claims"],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "summary": "Issue claim",
        "description": "Issue a claim to your policy",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "requested_amount": {
                      "type": "string"
                    },
                    "claim_status": {
                      "type": "integer"
                    },
                    "policy_id": {
                      "type": "integer"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "supporting_document": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "requested_amount": {
                    "type": "number",
                    "description": "Value in SAR",
                    "example": 1000
                  },
                  "description": {
                    "description": "All details about what happened",
                    "example": "",
                    "type": "string"
                  },
                  "supporting_document": {
                    "format": "binary",
                    "type": "string",
                    "description": "Could be used for uploading the invoice",
                    "example": ""
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "NotFound": {
        "description": "Record not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "40401"
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "40101"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthenticated"
                }
              }
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "QuoteResponse": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "description": "The owner’s national ID or Iqama ID"
          },
          "phone": {
            "type": "string",
            "description": "The owner's phone number"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "description": "The owner's birthdate. Hijri for Saudi nationals, Gregorian for others"
          },
          "car_sequence_number": {
            "type": "integer",
            "description": "The car sequence number from 9 digits"
          },
          "is_ownership_transfer": {
            "type": "boolean",
            "description": "Whether it was a car transfer or not"
          },
          "car_estimated_cost": {
            "type": "number",
            "description": "The estimated cost of the car"
          },
          "car_model_year": {
            "type": "integer",
            "description": "The car model year"
          },
          "quotes": {
            "description": "An array representing each insurance company quote. Each item has the company name, the prices, and the benefits.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "company_name": {
                  "type": "string"
                },
                "prices": {
                  "type": "array",
                  "description": "An array representing each price. This will have the premium and the deductible",
                  "items": {
                    "$ref": "#/components/schemas/QuotePrice"
                  }
                },
                "benefits": {
                  "type": "array",
                  "description": "An array representing the different benefits offered by the company. Some of them are free and comes with the insurance, some are paid and optional",
                  "items": {
                    "$ref": "#/components/schemas/Benefit"
                  }
                }
              }
            }
          },
          "client_id": {
            "description": "Your own client ID",
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "description": "In case of an update on this quote, this date will change",
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "description": "When was the quote requested",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "description": "Yasmina ID for the quote. You can use it to delete items or showing it again to the customer",
            "type": "integer"
          }
        }
      },
      "CompanyQuote": {
        "type": "object",
        "properties": {
          "company_name": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuotePrice"
            }
          },
          "benefits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Benefit"
            }
          }
        }
      },
      "QuotePrice": {
        "type": "object",
        "properties": {
          "quote_price_id": {
            "type": "string",
            "format": "uuid"
          },
          "deductible": {
            "type": "number"
          },
          "subtotal": {
            "type": "number"
          },
          "vat_percentage": {
            "type": "number",
            "example": 15
          },
          "vat": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "Benefit": {
        "type": "object",
        "properties": {
          "quote_benefit_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "vat": {
            "type": "number"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "meta_data": {
            "type": "object"
          },
          "start_date": {
            "type": "string"
          },
          "provider_policy_id": {
            "type": "integer"
          },
          "provider_policy": {
            "type": "string"
          },
          "order_status": {
            "type": "integer"
          },
          "approval_status": {
            "type": "integer"
          },
          "end_date": {
            "type": "string"
          },
          "is_claimed": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "canceled_at": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "type": "string"
          },
          "cancellation_document": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "description": "JWT Authorization header using the Bearer scheme",
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/oauth/token",
            "scopes": {
            }
          }
        }
      }
    }
  }
}